python:委托->包装对象 

python中，有委托的概念。
  
委托，字面理解就是，假装这件事是我在做，但是事实上我委托了其他人来帮我处理这件事。
    
python中的委托，和现实中的委托是何其相似！


在__init__(self,obj)方法中传入一个被委托对象。
    
通过重写__getattr__(self,item)方法，拦截外部对象的属性调用

在__getattr__(self,item)中，将拦截到的属性，让被委托对象去使用。

python 中的属性概念，和Java中的属性概念是不同的。Java中的属性，就是指类中定义的成员变量，绝对不包含方法。而在python中，任何能以obj.xx形式调用的东西，全部可以称为属性。无论是方法，还是变量，还是对象。

所以上述代码中调用x.append(N)，实际上是让x的属性wrapper去调用append(N)方法。

上面传入的参数是[1,2,3,4]，是一个list类型的对象，该对象自然可以调用append remove这些方法。
